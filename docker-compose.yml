services:
  backend-app:
    restart: always
    build: .
    container_name: idp-authenticator
    depends_on:
      - flyway
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://idp-postgres:${POSTGRES_PORT}/${POSTGRES_DB}
      - SPRING_DATASOURCE_USERNAME=${POSTGRES_USER}
      - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD}
      - SPRING_DATASOURCE_DRIVER_CLASS_NAME=org.postgresql.Driver
#      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
#      - SPRING_JPA_SHOW_SQL=true
      - SPRING_MAIL_HOST=smtp.gmail.com
      - SPRING_MAIL_PORT=587
      - SPRING_MAIL_USERNAME=${EMAIL_USERNAME}
      - SPRING_MAIL_PASSWORD=${EMAIL_PASSWORD}
      - SPRING_MAIL_PROPERTIES_MAIL_SMTP_AUTH=true
      - SPRING_MAIL_PROPERTIES_MAIL_SMTP_STARTTLS_ENABLE=true
    env_file:
      - .env
    ports:
      - "8091:8091"
    networks:
      - idp-network
#    healthcheck:
#      test: [ "CMD", "curl", "-f", "http://localhost:8080/actuator/health" ]
#      interval: 30s
#      timeout: 10s
#      retries: 3
#    deploy:
#      resources:
#        limits:
#          cpus: '1'
#          memory: 512M

  idp-postgres:
    image: postgres:15-alpine
    container_name: idp-postgres
#    environment:
#      - POSTGRES_HOST_AUTH_METHOD=trust
#      - POSTGRES_DB=${POSTGRES_DB}
#      - POSTGRES_USER=${POSTGRES_USER}
#      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    env_file:
      - .env
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - idp-network
      - db-network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 256M

  flyway:
    image: flyway/flyway:11.10-alpine
    env_file:
      - .env
    command: -url=jdbc:postgresql://idp-postgres:5432/${POSTGRES_DB} -schemas=public -user=${POSTGRES_USER} -password=${POSTGRES_PASSWORD} migrate
    volumes:
      - ./sql:/flyway/sql
    depends_on:
      idp-postgres:
        condition: service_healthy
    networks:
      - db-network

  pgadmin:
    image: dpage/pgadmin4
    container_name: idp-pgadmin
    environment:
      - GUNICORN_THREADS=1
      - PGADMIN_DEFAULT_EMAIL=admin@admin.com
      - PGADMIN_DEFAULT_PASSWORD=admin
    ports:
      - "5050:80"
    depends_on:
      idp-postgres:
        condition: service_healthy
    networks:
      - db-network
#    deploy:
#      resources:
#        limits:
#          cpus: '0.5'
#          memory: 128M

networks:
  idp-network:
    driver: bridge
  db-network:
    driver: bridge

volumes:
  postgres_data: